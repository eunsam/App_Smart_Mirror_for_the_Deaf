
package com.example.vicl_10.lipinthemirror;

import android.app.Activity;
import android.content.Intent;
import android.graphics.Color;
import android.media.Image;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.Menu;
import android.view.View;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.kakao.network.ErrorResult;
import com.kakao.usermgmt.UserManagement;
import com.kakao.usermgmt.callback.LogoutResponseCallback;
import com.kakao.usermgmt.callback.MeResponseCallback;
import com.kakao.usermgmt.response.model.UserProfile;

import org.w3c.dom.Text;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.InetSocketAddress;
import java.net.Socket;

/**
 * Created by VICL-10 .
 */

public class MenuActivity extends Activity{

    //private String mMessage = null;



    String path = "";
    String name = "";
    //String page = "";

    //int ipage=0;

    /*public static final int SERVERPORT = 6667;
    public static final String ip = "192.168.0.27";
    //public static final String ip = SettingActivity.smartmirror_IP;
    //private String smartmirror_IP;
    //private SharedPreferences prefs;

    public static Socket socketw;
    public static DataInputStream m_dis;
    public static DataOutputStream m_dos;

    String msg="";*/

    public static Socket m_gsocket;
    public static DataInputStream m_dis;
    public static DataOutputStream m_dos;

   //final KakaoSignupActivity kakao = new KakaoSignupActivity();

    @Override
    protected void onCreate(Bundle savedInstanceState){

        super.onCreate(savedInstanceState);
        setContentView(R.layout.menu);

        final DBHelper dbHelper = new DBHelper(getApplicationContext(), "SettingIP.db", null, 1);

        try{
            Intent intent = getIntent();
            path = intent.getExtras().getString("path");
            name = intent.getExtras().getString("name");
            /*if(path==null || name==null)
            {
                path = "http://mud-kage.kakao.co.kr/14/dn/btqfAUjOrTW/KKd6zJ0Cy9vFTTAmnwwSqK/o.jpg";
                name = "홍길동";
            }*/
            //page = intent.getExtras().getString("page");
        }catch(NullPointerException e)
        {
            e.printStackTrace();
        }

        /*try{
            Intent intent2 = getIntent();
            ipage = Integer.parseInt(page);
        }catch(NumberFormatException e)
        {
            e.printStackTrace();
        }*/



        /*try {
            socketw = new Socket(ip, SERVERPORT);

            m_dis = new DataInputStream(socketw.getInputStream());
            m_dos = new DataOutputStream(socketw.getOutputStream());
        }catch(IOException e)
        {
            e.printStackTrace();
        }*/

        //socket 생성
        try {

        }
        catch (Exception e) {
            Log.e("error",e.getMessage());
        }


        ImageButton edu = (ImageButton)findViewById(R.id.educateBtn);
        //ImageButton smm = (ImageButton)findViewById(R.id.summaryBtn);
        ImageButton set = (ImageButton)findViewById(R.id.settingBtn);
        //ImageButton out = (ImageButton)findViewById(R.id.logoutBtn);
        ImageButton ter = (ImageButton)findViewById(R.id.terminateBtn);
        ImageButton cid = (ImageButton)findViewById(R.id.idBtn); //check id
        ImageButton use = (ImageButton)findViewById(R.id.idUse);

        edu.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View v)
            {
                //Toast.makeText(MenuActivity.this, dbHelper.getResult(), Toast.LENGTH_SHORT).show();
                Intent edu_intent = new Intent(MenuActivity.this, MainActivity.class);
                startActivity(edu_intent); //학습하기 액티비티 실행
            }
        });

        set.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View v)
            {
                Intent set_intent = new Intent(MenuActivity.this, SettingActivity.class);
                startActivity(set_intent); //IP 세팅 액티비티 실행
            }
        });

        cid.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View v)
            {
                Intent set_intent = new Intent(MenuActivity.this, CheckIDActivity.class);
                set_intent.putExtra("path", path);
                set_intent.putExtra("name", name);
                //set_intent.putExtra("page", ipage);
                startActivity(set_intent);
            }
        });

        use.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View v)
            {
                TCPClient use_start = new TCPClient("use\n");
                use_start.start(); //서버로 종료하라는 메세지
                Intent use_intent = new Intent(MenuActivity.this, GuideActivity.class);
                startActivity(use_intent);
            }
        });

        ter.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                //TCPClient ter_start = new TCPClient(socketw, m_dis, m_dos, "ter\n");
               // TCPClient ter_start = new TCPClient("ter\n");
                //ter_start.start(); //서버로 종료하라는 메세지
                try{
                    m_gsocket.close();
                }catch(IOException e){}
                finish();
            }
        });

        /*MainActivity before = (MainActivity)MainActivity.before;
        before.finish();

        LinearLayout main = (LinearLayout)this.findViewById(R.id.menuLayout);*/

        //ainHandler = new Handler();
        //this.getMessage();

    }


    /*private void redirectLoginActivity() {
        Intent intent = new Intent(MenuActivity.this, LoginActivity.class);
        startActivity(intent);
        finish();
    }*/

    /*public void mClickLogout(View v) {
        Toast.makeText(MenuActivity.this,"성공적으로 로그아웃 되었습니다.", Toast.LENGTH_SHORT).show();
        UserManagement.requestLogout(new LogoutResponseCallback() {
            @Override
            public void onCompleteLogout() {
                redirectLoginActivity();
            }
        });
    }*/

    /*private void checkIDActivity(){
        Intent id_intent = new Intent(MenuActivity.this, CheckIDActivity.class);
        startActivity(id_intent);
    }

    private void requestMe()
    {
        UserManagement.requestMe(new MeResponseCallback() {
            @Override
            public void onFailure(ErrorResult errorResult) {
                String message = "failed to get user info. msg=" + errorResult;
                redirectLoginActivity();
            }

            @Override
            public void onSessionClosed(ErrorResult errorResult) {
                redirectLoginActivity();
            }

            @Override
            public void onSuccess(UserProfile userProfile) {
                Log.d("myLog", "userProfile" + userProfile.getId());
                Log.d("myLog", "userProfile" + userProfile.getNickname());
                Log.d("myLog",
                        "userProfile" + userProfile.getThumbnailImagePath());
                checkIDActivity();
            }

            @Override
            public void onNotSignedUp() {
                //
            }
        });
    }*/
}
